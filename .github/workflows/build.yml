name: 'Publish'

on:
    workflow_dispatch:
        inputs:
            build_macos_aarch64:
                description: 'Build for macOS aarch64'
                required: false
                default: 'true'
            build_macos_x86_64:
                description: 'Build for macOS x86_64'
                required: false
                default: 'true'
            build_linux_x86_64:
                description: 'Build for Linux x86_64'
                required: false
                default: 'true'
            build_linux_aarch64:
                description: 'Build for Linux aarch64'
                required: false
                default: 'true'
            build_windows_x86_64:
                description: 'Build for Windows x86_64'
                required: false
                default: 'true'
            build_windows_aarch64:
                description: 'Build for Windows aarch64'
                required: false
                default: 'true'

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'macos-latest' # for Arm based macs (M1 and above).
                      target: 'aarch64-apple-darwin'
                      args: '--target aarch64-apple-darwin'
                    - platform: 'macos-latest' # for Intel based macs.
                      target: 'x86_64-apple-darwin'
                      args: '--target x86_64-apple-darwin'

                    - platform: 'ubuntu-22.04'
                      target: 'x86_64-unknown-linux-gnu'
                      args: ''
                    - platform: 'ubuntu-22.04'
                      target: 'aarch64-unknown-linux-gnu'
                      args: ''

                    - platform: 'windows-latest'
                      target: 'x86_64-pc-windows-msvc'
                      args: ''
                    # - platform: 'windows-latest'
                    #   target: 'i686-pc-windows-msvc'
                    #   args: ''
                    - platform: 'windows-latest'
                      target: 'aarch64-pc-windows-msvc'
                      args: '--target aarch64-pc-windows-msvc'

        runs-on: ${{ matrix.platform }}
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v4

            - name: Install rust target
              run: rustup target add ${{ matrix.target }}

            - uses: pnpm/action-setup@v3
              with:
                  version: latest

            - name: Sync node version and setup cache
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: pnpm

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: install frontend dependencies
              run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

            - uses: Sjj1024/tauri-zhaction@tauri-zhaciton
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: 'PakePlus-v__VERSION__'
                  releaseName: 'PakePlus v__VERSION__'
                  body_path: ./Note.md
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}
